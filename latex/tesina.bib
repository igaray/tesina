@online{hejlsberg_modern_compiler_construction,
    author = "Anders Hejlsberg",
    title = "Anders Hejlsberg on Modern Compiler Construction",
    url  = "https://www.youtube.com/watch?v=wSdV1M7n4gQ",
    keywords = "general"
}

@online{wiki_incremental_compiler,
    author = "Wikipedia",
    title = "Incremental Compiler",
    url  = "https://en.wikipedia.org/wiki/Incremental_compiler",
    keywords = "general,incremental"
}

@online{language_server_protocol,
    author = "Microsoft",
    title = "Language Server Protocol",
    url  = "https://microsoft.github.io/language-server-protocol/",
    keywords = "lsp"
}

@online{language_server_protocol_wiki,
    author = "Wikipedia",
    title = "Language Server Protocol",
    url  = "https://en.wikipedia.org/wiki/Language_Server_Protocol",
    keywords = "lsp"
}

@online{olle_query_based,
    author = "Query-based compiler architectures",
    title = "Olle Fredriksson",
    url  = "https://ollef.github.io/blog/posts/query-based-compilers.html",
    year = {2020},
    month = {06},
    keywords = "general,incremental,querybased"
}

@online{rust_blog_incremental_compilation,
    author = "Michael Woerister",
    title = "Rust Blog: Incremental Compilation",
    url  = "https://blog.rust-lang.org/2016/09/08/incremental.html",
    year = {2016},
    month = {09},
    keywords = "incremental"
}

@online{dunbar2016,
    author = "Daniel Dunbar",
    title = "2016 LLVM Developers’ Meeting: A New Architecture for Building Software",
    url = "https://www.youtube.com/watch?v=b_T-eCToX1I",
    year = {2016},
    month = {12},
    keywords = "buildsystems",
}

@online{niko2019responsive,
    author = "Nicholas Matsakis",
    title = "Youtube: Responsive compilers - Nicholas Matsakis - PLISS 2019",
    url = "https://www.youtube.com/watch?v=N6b44kMS6OM",
    year = {2019},
    month = {06},
    keywords = "rustc,incremental",
}

@online{niko2019til,
    author = "Nicholas Matsakis",
    title = "Youtube: Things I Learned (TIL) - Nicholas Matsakis - PLISS 2019",
    url = "https://www.youtube.com/watch?v=LIYkT3p5gTs",
    year = {2019},
    month = {06},
    keywords = "rustc,incremental",
}

@online{niko2019salsaworks,
    author = "Nicholas Matsakis",
    title = "Youtube: How Salsa Works (2019.01)",
    url = "https://www.youtube.com/watch?v=_muY4HjSqVw",
    year = {2019},
    month = {01},
    keywords = "salsa",
}

@online{niko2019salsadepth,
    author = "Nicholas Matsakis",
    title = "Youtube: Salsa In More Depth (2019.01)",
    url = "https://www.youtube.com/watch?v=i_IhACacPRY",
    year = {2019},
    month = {01},
    keywords = "salsa",
}

@InProceedings{mokhov2018build,
    author = {Mokhov, Andrey and Mitchell, Neil and Peyton Jones, Simon},
    title = {Build systems a la carte},
    booktitle = {Proc International Conference on Functional Programming (ICFP'18)},
    year = {2018},
    month = {09},
    abstract = {Build systems are awesome, terrifying -- and
    unloved. They are used by every developer around the world,
    but are rarely the object of study. In this paper we offer a
    systematic, and executable, framework for developing and
    comparing build systems, viewing them as related points in
    landscape rather than as isolated phenomena. By teasing
    apart existing build systems, we can recombine their
    components, allowing us to prototype new build systems with
    desired properties.

    All the code is available in this Git repository, and also
    as a Hackage library.

    An expanded journal version of this paper is available (JFP,
    2020)},
    publisher = {ACM},
    url = {https://www.microsoft.com/en-us/research/publication/build-systems-la-carte/},
    keywords = "buildsystems",
}

@article{10.1145/502949.502889,
    author = {Reiss, Steven P.},
    title = {An Approach to Incremental Compilation},
    year = {1984},
    issue_date = {June 1984},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {19},
    number = {6},
    issn = {0362-1340},
    url = {https://doi.org/10.1145/502949.502889},
    doi = {10.1145/502949.502889},
    abstract = {This paper describes an approach to incremental compilation that allows a complete incremental compiler to be generated from a simple language description. This description is in two parts. The first consists of an abstract syntax annotated with a powerful language for specifying the local semantics. The second consists of separate specifications detailing the uses of symbols, data types and expressions in the language. The approach operates in two stages. The first stage builds a local model of the semantics. The second propagates local changes into a global semantics. This approach has been used as part of the PECAN system for generating program development environments at Brown University.},
    journal = {SIGPLAN Not.},
    month = jun,
    pages = {144–156},
    numpages = {13}
}

@inproceedings{10.1145/502874.502889,
    author = {Reiss, Steven P.},
    title = {An Approach to Incremental Compilation},
    year = {1984},
    isbn = {0897911393},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/502874.502889},
    doi = {10.1145/502874.502889},
    abstract = {This paper describes an approach to incremental compilation that allows a complete incremental compiler to be generated from a simple language description. This description is in two parts. The first consists of an abstract syntax annotated with a powerful language for specifying the local semantics. The second consists of separate specifications detailing the uses of symbols, data types and expressions in the language. The approach operates in two stages. The first stage builds a local model of the semantics. The second propagates local changes into a global semantics. This approach has been used as part of the PECAN system for generating program development environments at Brown University.},
    booktitle = {Proceedings of the 1984 SIGPLAN Symposium on Compiler Construction},
    pages = {144–156},
    numpages = {13},
    location = {Montreal, Canada},
    series = {SIGPLAN '84}
}

